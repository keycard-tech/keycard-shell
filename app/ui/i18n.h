#ifndef __I18N__
#define __I18N__

extern const char** const i18n_strings[];
extern const char *const i18n_english_strings[];

typedef enum {
  // Main menu
  MENU_QRCODE = 0,
  MENU_CONNECT,
  MENU_ADDRESSES,
  MENU_SETTINGS,
  MENU_INFO,

  // Connect menu
  MENU_CONNECT_EIP4527,
  MENU_CONNECT_BITCOIN,
  MENU_CONNECT_BITCOIN_MULTISIG,
  MENU_CONNECT_BITCOIN_TESTNET,
  MENU_CONNECT_MULTICOIN,

  // Addresses menu
  MENU_ETHEREUM,
  MENU_BITCOIN,

  // Settings menu
  MENU_KEYCARD,
  MENU_DEVICE,

  // Keycard menu
  MENU_CARD_NAME,
  MENU_CHANGE_PIN,
  MENU_CHANGE_PUK,
  MENU_CHANGE_PAIRING,
  MENU_RESET_CARD,
  MENU_UNBLOCK_PUK,
  MENU_PAIR,

  // Device menu
  MENU_DEV_AUTH,
  MENU_UPDATE,
  MENU_BRIGHTNESS,
  MENU_SET_OFF_TIME,
  MENU_USB,
  MENU_INSTRUCTIONS,

  // Info menu
  MENU_HELP,
  MENU_SW_INFO,
  MENU_ELABEL,

  // Help menu
  HELP_TITLE,

  // Connect wallet
  CONNECT_HOWTO,
  CONNECT_HOWTO_PROMPT,

  // TX Confirmation
  TX_CONFIRM_TRANSFER,
  TX_CONFIRM_APPROVAL,
  TX_CHAIN,
  TX_ADDRESS,
  TX_SPENDER,
  TX_AMOUNT,
  TX_SIGNED_AMOUNT,
  TX_MULTIPLE_RECIPIENT,
  TX_SIGHASH_WARNING,
  TX_FEE,
  TX_SIGNER,
  TX_DATA,
  TX_NO,
  TX_YES,
  TX_INPUT,
  TX_OUTPUT,
  TX_SIGNED,
  TX_SIGN_SCHEME,
  TX_SIGN_ALL,
  TX_SIGN_NONE,
  TX_SIGN_SINGLE,
  TX_SIGN_ANYONECANPAY,
  TX_CHANGE,
  TX_SATOSHI,
  TX_UNLIMITED,
  TX_TOOLITTLE,

  // MSG Confirmation
  MSG_CONFIRM_TITLE,
  MSG_LABEL,

  // EIP712 Confirmation
  EIP712_CONFIRM_TITLE,
  EIP712_CONTRACT,
  EIP712_NAME,
  EIP712_UNSPECIFIED,

  // Safe Confirmation
  TX_SAFE_CONFIRM_TITLE,
  TX_SAFE_ADDRESS,
  TX_SAFE_GAS,
  TX_SAFE_BASEGAS,
  TX_SAFE_GAS_PRICE,
  TX_SAFE_GAS_TOKEN,
  TX_SAFE_REFUND_RX,
  TX_SAFE_NONCE,
  TX_SAFE_OP,
  TX_SAFE_OP_CALL,
  TX_SAFE_OP_DELEGATE,
  TX_SAFE_HASH,

  // QR output
  QR_ADDRESS_ETH_TITLE,
  QR_ADDRESS_BTC_TITLE,

  // PIN input
  PIN_INPUT_TITLE,
  PIN_WRONG_WARNING,
  PIN_CREATE_TITLE,
  PIN_LABEL_REMAINING_ATTEMPTS,
  PIN_LABEL_REPEAT,
  PIN_CHANGE_SUCCESS,

  // PUK input
  PUK_INPUT_TITLE,
  PUK_WRONG_WARNING,
  PUK_CREATE_TITLE,
  PUK_LABEL_REPEAT,
  PUK_CHANGE_SUCCESS,
  PUK_CHANGE_PROMPT,

  // Duress input
  DURESS_CREATE_TITLE,
  DURESS_LABEL_REPEAT,
  DURESS_PROMPT_TITLE,
  DURESS_PROMPT_MSG,
  DURESS_OK_MSG,
  DURESS_OK_SUB,
  DURESS_EQ_PIN_MSG,
  DURESS_EQ_PIN_SUB,

  // Pairing input
  PAIRING_INPUT_TITLE,
  PAIRING_CREATE_TITLE,
  PAIRING_CHANGE_SUCCESS,
  PAIRING_CHANGE_PROMPT,

  // Name input
  CARD_NAME_CHANGE_SUCCESS,

  // Input hints
  INPUT_NAV_EXIT,
  INPUT_NAV_SAVE,
  INPUT_NAV_PROCEED,
  INPUT_NAV_SKIP,

  // Factory reset
  FACTORY_RESET_TITLE,
  FACTORY_RESET_WARNING,
  FACTORY_RESET_SUCCESS,
  FACTORY_RESET_SUCCESS_SUB,

  // Info messages
  INFO_CARD_ERROR_MSG,
  INFO_CARD_ERROR_SUB,
  INFO_CARD_FAIL_MSG,
  INFO_CARD_FAIL_SUB,
  INFO_NOT_KEYCARD_MSG,
  INFO_NOT_KEYCARD_SUB,
  INFO_NOT_GENUINE_MSG,
  INFO_NOT_GENUINE_SUB,
  INFO_OLD_KEYCARD_MSG,
  INFO_OLD_KEYCARD_SUB,
  INFO_NO_PAIRING_SLOTS_MSG,
  INFO_NO_PAIRING_SLOTS_SUB,
  INFO_WRONG_CARD_MSG,
  INFO_WRONG_CARD_SUB,
  INFO_MALFORMED_DATA_MSG,
  INFO_MALFORMED_DATA_SUB,
  INFO_KEYCARD_BLOCKED,
  INFO_KEYCARD_LOADED_MSG,
  INFO_KEYCARD_LOADED_SUB,
  INFO_KEYCARD_BAD_SEED_MSG,
  INFO_TRY_AGAIN,
  INFO_WRITE_KEEP_SAFE,
  INFO_MISSING,
  INFO_CARD_PAIRED,
  INFO_WRONG_PAIRING,
  INFO_CANNOT_SIGN,
  INFO_CANNOT_SIGN_SUB,
  INFO_SLIP39_MISMATCH_MSG,
  INFO_SLIP39_MISMATCH_SUB,
  INFO_SLIP39_UNSUPPORTED_MSG,
  INFO_SLIP39_UNSUPPORTED_SUB,
  INFO_SLIP39_PART_OK_MSG,
  INFO_SLIP39_PART_OK_SUB,

  // DB Update
  DB_UPDATE_TITLE,
  DB_UPDATE_OK,
  DB_UPDATE_INVALID,
  DB_UPDATE_ERROR,
  DB_UPDATE_CONFIRM,

  // FW Upgrade
  FW_UPGRADE_TITLE,
  FW_UPGRADE_WARNING,
  FW_UPGRADE_INVALID_MSG,
  FW_UPGRADE_INVALID_SUB,
  FW_UPGRADE_CONFIRM,
  FW_UPGRADE_HELP,

  // Mnemonic input
  MNEMO_TITLE,
  MENU_MNEMO_12WORDS,
  MENU_MNEMO_12WORDS_PASS,
  MENU_MNEMO_24WORDS,
  MENU_MNEMO_24WORDS_PASS,
  MENU_MNEMO_SLIP39,
  MENU_MNEMO_SLIP39_PASS,
  MENU_MNEMO_WITH_PASS,
  MENU_MNEMO_NO_PASS,
  MENU_MNEMO_IMPORT,
  MENU_MNEMO_GENERATE,
  MENU_MNEMO_SCAN,
  MNEMO_WORD_TITLE,
  MNEMO_WORD_BACKUP_TITLE,
  MNEMO_BACKUP_PROMPT,
  MNEMO_MISMATCH,
  MNEMO_MISMATCH_LIMIT,
  MNEMO_MISMATCH_RETRY,
  MNEMO_VERIFY_TITLE,
  MNEMO_VERIFY_PROMPT,
  MNEMO_PASSPHRASE_TITLE,
  MNEMO_SLIP39_COUNT_TITLE,
  MNEMO_SLIP39_THRESHOLD_TITLE,
  MNEMO_BACKUP_SLIP39_PROMPT,

  // Device verification
  DEV_AUTH_TITLE,
  DEV_AUTH_PROMPT,
  DEV_AUTH_INVALID_QR,
  DEV_AUTH_INVALID_CHALLENGE_SUB,
  DEV_AUTH_INVALID_SITE_MSG,
  DEV_AUTH_INVALID_SITE_SUB,
  DEV_AUTH_INFO_SUCCESS_MSG,
  DEV_AUTH_INFO_SUCCESS_SUB,

  // LCD settings
  LCD_BRIGHTNESS_TITLE,

  // Auto off times
  AUTO_OFF_TITLE,
  MENU_OFF_3MINS,
  MENU_OFF_5MINS,
  MENU_OFF_10MINS,
  MENU_OFF_30MINS,
  MENU_OFF_NEVER,

  // USB enable
  USB_ENABLE_TITLE,
  MENU_OFF,
  MENU_ON,

  // Instructions
  MENU_SHOW,
  MENU_HIDE,

  // Device info
  DEVICE_INFO_TITLE,
  DEVICE_INFO_FW,
  DEVICE_INFO_DB,
  DEVICE_INFO_SN,
  DEVICE_INFO_ELABEL,

  // Prompts
  PROMPT_MNEMONIC,
  PROMPT_CARD_NAME,
  PROMPT_PAIRING,
  PROMPT_NEW_PAIRING,

  // QR seed scanning
  QRSEED_INVALID_MSG,
  QRSEED_INVALID_SUB,

  // Export public key
  PUBKEY_EXPORT_TITLE,
  PUBKEY_EXPORT_MSG,

  INVALID_STR = 0xffff
} i18n_str_id_t;

#define LSTR(__ID__) (*i18n_strings)[__ID__]

void i18n_set_strings(const char *const strings[]);

#endif
